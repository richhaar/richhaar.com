"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[990],{3905:function(t,e,a){a.d(e,{Zo:function(){return c},kt:function(){return d}});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function s(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},o=Object.keys(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var l=n.createContext({}),p=function(t){var e=n.useContext(l),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},c=function(t){var e=p(t.components);return n.createElement(l.Provider,{value:e},t.children)},h={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,o=t.originalType,l=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),u=p(a),d=r,m=u["".concat(l,".").concat(d)]||u[d]||h[d]||o;return a?n.createElement(m,i(i({ref:e},c),{},{components:a})):n.createElement(m,i({ref:e},c))}));function d(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=a.length,i=new Array(o);i[0]=u;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:r,i[1]=s;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},97:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},assets:function(){return c},toc:function(){return h},default:function(){return d}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),i=["components"],s={slug:"plotting-ny-with-pandas",title:"Plotting a Map of New York using Collision data",authors:"rich",tags:["python"]},l="Creating a map of Manhattan roads with openly available data",p={permalink:"/plotting-ny-with-pandas",editUrl:"https://github.com/richhaar/richhaar.com/edit/main/blog/2022-01-29-plotting-ny-with-pandas.md",source:"@site/blog/2022-01-29-plotting-ny-with-pandas.md",title:"Plotting a Map of New York using Collision data",description:"There are a huge amount of datasets available online, you can find many on https://dataportals.org/ including data for the city of New York.",date:"2022-01-29T00:00:00.000Z",formattedDate:"January 29, 2022",tags:[{label:"python",permalink:"/tags/python"}],readingTime:2.51,truncated:!0,authors:[{name:"Richard Haar",title:"Computer Scientist",url:"https://github.com/richhaar",imageURL:"/img/profile2.png",key:"rich"}],nextItem:{title:"Publishing C++ as a JavaScript NPM package",permalink:"/npmpackage"}},c={authorsImageUrls:[void 0]},h=[{value:"Plotting the data",id:"plotting-the-data",children:[{value:"Step 1, Load the Data",id:"step-1-load-the-data",children:[]},{value:"Step 2, Explore the Data",id:"step-2-explore-the-data",children:[]},{value:"Step 3, Plot the data",id:"step-3-plot-the-data",children:[]},{value:"Step 4, Clean the data",id:"step-4-clean-the-data",children:[]},{value:"Step 5, Polish the graph",id:"step-5-polish-the-graph",children:[]},{value:"Bonus pictures",id:"bonus-pictures",children:[]}]}],u={toc:h};function d(t){var e=t.components,s=(0,r.Z)(t,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,s,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"There are a huge amount of datasets available online, you can find many on ",(0,o.kt)("a",{parentName:"p",href:"https://dataportals.org/"},"https://dataportals.org/")," including data for the ",(0,o.kt)("a",{parentName:"p",href:"https://opendata.cityofnewyork.us/"},"city of New York"),".\nThey provide a dataset containing details on ",(0,o.kt)("a",{parentName:"p",href:"https://data.cityofnewyork.us/Public-Safety/Motor-Vehicle-Collisions-Crashes/h9gi-nx95"},"over 1.8 million crashes"),"."),(0,o.kt)("h2",{id:"plotting-the-data"},"Plotting the data"),(0,o.kt)("p",null,"Now each crash contains a Latitude and Longitude value for where the collision occurred.\nAnd with 1.8 million collisions, it should be possible to map New York roads using this data."),(0,o.kt)("h3",{id:"step-1-load-the-data"},"Step 1, Load the Data"),(0,o.kt)("p",null,"Download the dataset above, load it in via ",(0,o.kt)("a",{parentName:"p",href:"https://pandas.pydata.org/"},"pandas"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# %% Import the Dataset, assumed in subfolder\n# datasets/ny/Motor_Vehicle_Collisions_-_Crashes.csv\n\nimport os\nimport pandas as pd\n\nDATA_PATH = os.path.join("datasets", "ny")\nDATA_NAME = "Motor_Vehicle_Collisions_-_Crashes.csv"\n\ndef load_data(data_path=DATA_PATH, data_name=DATA_NAME):\n    csv_path = os.path.join(data_path, DATA_NAME)\n    return pd.read_csv(csv_path)\n\ncrashdata = load_data()\n\n')),(0,o.kt)("h3",{id:"step-2-explore-the-data"},"Step 2, Explore the Data"),(0,o.kt)("p",null,"You can view the data to get a better idea of what's being shown."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# %% Data exploration\n\nprint(crashdata.head())\nprint(crashdata.info())\n\n# Misc injury statistics\n\nprint(crashdata.iloc[:, 10:18].sum())\n# NUMBER OF PERSONS INJURED        528270.0\n# NUMBER OF PERSONS KILLED           2492.0\n# NUMBER OF PEDESTRIANS INJURED     97629.0\n# NUMBER OF PEDESTRIANS KILLED       1283.0\n# NUMBER OF CYCLIST INJURED         44811.0\n# NUMBER OF CYCLIST KILLED            186.0\n# NUMBER OF MOTORIST INJURED       383340.0\n# NUMBER OF MOTORIST KILLED          1008.0\n\nprint(crashdata.iloc[:, 10:18].max())\n# NUMBER OF PERSONS INJURED        43.0\n# NUMBER OF PERSONS KILLED          8.0\n# NUMBER OF PEDESTRIANS INJURED    27.0\n# NUMBER OF PEDESTRIANS KILLED      6.0\n# NUMBER OF CYCLIST INJURED         4.0\n# NUMBER OF CYCLIST KILLED          2.0\n# NUMBER OF MOTORIST INJURED       43.0\n# NUMBER OF MOTORIST KILLED         5.0\n\n")),(0,o.kt)("h3",{id:"step-3-plot-the-data"},"Step 3, Plot the data"),(0,o.kt)("p",null,"An initial attempt at plotting the data may be surprising to some, unsurprising to others. Not good:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'subcrash = crashdata # To speed up plotting use a smaller set e.g. crashdata[:10000]\n\n# Remove all rows where there is an invalid Longitude/Latitude value\nsubcrash.dropna(subset=["LONGITUDE","LATITUDE"])\n\nsubcrash.plot(kind="scatter", x="LONGITUDE", y="LATITUDE")\n\n')),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/richhaar/newyork-crash-map/master/plots/Figure%202022-01-29%20200417.png",alt:"Figure 0"})),(0,o.kt)("p",null,"We can see that we have some zero values for Longitude and Latitude as well as perhaps some incorrectly entered values."),(0,o.kt)("h3",{id:"step-4-clean-the-data"},"Step 4, Clean the data"),(0,o.kt)("p",null,"One way would be to clean the data frame, such as by filtering columns:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"subcrash = subcrash[subcrash.LONGITUDE > -74.4]\nsubcrash = subcrash[subcrash.LONGITUDE < -70]\nsubcrash = subcrash[subcrash.LATITUDE < 41]\n\n")),(0,o.kt)("p",null,"Or, we can make use of matplotlib's ",(0,o.kt)("inlineCode",{parentName:"p"},"xlim")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"ylim")," setting to set our range\nto view the plot with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'med = crashdata[["LONGITUDE", "LATITUDE"]].median()\noffset = 0.3\n\nsubcrash.plot(kind="scatter", x="LONGITUDE", y="LATITUDE",\n              xlim=[med[0]-offset,med[0]+offset],\n              ylim=[med[1]-offset,med[1]+offset])\n')),(0,o.kt)("p",null,"And for those familiar with New York might start to recognise the shape:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/richhaar/newyork-crash-map/master/plots/Figure%202022-01-29%20200934.png",alt:"Figure 1"})),(0,o.kt)("h3",{id:"step-5-polish-the-graph"},"Step 5, Polish the graph"),(0,o.kt)("p",null,"Now, matplotlib let's you set opacity for the scatter plot as well as the size of the dots."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'subcrash.plot(kind="scatter", x="LONGITUDE", y="LATITUDE", alpha=0.01, s=0.02,\n              xlim=[med[0]-offset,med[0]+offset],\n              ylim=[med[1]-offset,med[1]+offset])\n')),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/richhaar/newyork-crash-map/master/plots/Figure%202022-01-29%20193054.png",alt:"Figure 2"})),(0,o.kt)("p",null,"Now that's more like a map of New York."),(0,o.kt)("h3",{id:"bonus-pictures"},"Bonus pictures"),(0,o.kt)("p",null,"And zoomed in even more, you can clearly see Central Park and the iconic Manhattan roads:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/richhaar/newyork-crash-map/master/plots/Figure%202022-01-29%20201504.png",alt:"Figure 3"})),(0,o.kt)("p",null,"Source code avaiable at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/richhaar/newyork-crash-map"},"https://github.com/richhaar/newyork-crash-map"),"."),(0,o.kt)("p",null,"Bonus picture of New York, definitely worth a visit."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"View from One World Trade Center",src:a(5850).Z})))}d.isMDXComponent=!0},5850:function(t,e,a){e.Z=a.p+"assets/images/IMG_20211219_151006-9fe3161ed4bf6ce09d7110728f6185b7.jpg"}}]);